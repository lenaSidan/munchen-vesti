import styles from "@/styles/SearchBox.module.css";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";

type SearchItem = {
  title: string;
  slug: string | string[];
  fileId: string;
  url: string;
};
interface SearchBoxProps {
  onClose?: () => void; // ‚Üê –¥–æ–±–∞–≤–ª—è–µ–º —Å—é–¥–∞
}
export default function SearchBox({ onClose }: SearchBoxProps) {
  const router = useRouter();
  const [query, setQuery] = useState("");
  const [results, setResults] = useState<SearchItem[]>([]);
  const [allItems, setAllItems] = useState<SearchItem[]>([]);

  // üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  useEffect(() => {
    async function loadData() {
      try {
        const locale = router.locale || "ru";
        const res = await fetch(`/api/search-data?locale=${locale}`);
        const data = await res.json();
        setAllItems(data);
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–∏—Å–∫–∞:", err);
      }
    }
    loadData();
  }, [router.locale]);

  // üîπ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è
  useEffect(() => {
    if (!query.trim()) {
      setResults([]);
      return;
    }

    const q = query.toLowerCase();
    const filtered = allItems.filter((item) => {
      const titleMatch = item.title.toLowerCase().includes(q);
      const slugMatch = Array.isArray(item.slug)
        ? item.slug.some((s) => s.toLowerCase().includes(q))
        : item.slug.toLowerCase().includes(q);
      const fileMatch = item.fileId.toLowerCase().includes(q);
      return titleMatch || slugMatch || fileMatch;
    });

    setResults(filtered);
  }, [query, allItems]);

  // üîπ –ü–µ—Ä–µ—Ö–æ–¥ –ø–æ –∫–ª–∏–∫—É
function handleResultClick(e: React.MouseEvent, item: SearchItem) {
  e.preventDefault();

  const locale = router.locale || "ru";
  const fullUrl = `/${locale}/events-page#${encodeURIComponent(item.fileId)}`;

  // hash –º–µ–Ω—è–µ—Ç—Å—è ‚Üí —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—à listener –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–æ–±—ã—Ç–∏–π
  router.push(fullUrl, undefined, { shallow: true });

  // UX: —á–∏—Å—Ç–∏–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º
  setQuery("");
  setResults([]);
  onClose?.();
}



  return (
    <div className={styles.searchBox}>
      <input
        type="text"
        placeholder={router.locale === "de" ? "Suche..." : "–ü–æ–∏—Å–∫..."}
        value={query}
        onChange={(e) => setQuery(e.target.value)}
        className={styles.input}
      />

      {results.length > 0 && (
        <ul className={styles.results}>
          {results.map((item) => (
            <li key={item.fileId}>
              <a
                href={item.url}
                onClick={(e) => handleResultClick(e, item)}
                className={styles.link}
              >
                {item.title}
              </a>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
}
